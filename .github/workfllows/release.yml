name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # Define the operating systems to run on

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libboost-test-dev -y

      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install boost # Assuming Homebrew is installed on macOS

      - name: Configure CMake
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}

      - name: Build Project
        run: cmake --build .

      - name: Run Tests
        run: cmake --build . --target test

      - name: Package Creation
        run: cmake --build . --target package

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./helloworld-0.0.${{ github.run_number }}-Linux.deb # Adjust this path based on OS if needed
          asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb # Adjust this name based on OS if needed
          asset_content_type: application/vnd.debian.binary-package # Adjust content type if necessary for macOS packages